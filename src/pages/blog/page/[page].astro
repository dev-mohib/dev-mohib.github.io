---
import PageHeading from "../../../components/page-heading.astro";
import PostData from "../../../components/post-card.astro";
import Layout from "../../../layouts/main.astro";
const posts = await Astro.glob<any>('../../post/*.mdx');
const postPerPage : number = 3

export async function getStaticPaths() {
    const totalPosts = await Astro.glob<any>('../../post/*.mdx');
    const numberOfPages = Math.ceil(totalPosts.length / 3)
    let params = []
    for (let i = 2; i <= numberOfPages; i++) {
        params.push({ params: { page: i.toString() } })
    }
    return params
}

const { page : currentPage } = Astro.params

const nextPage : number = parseInt(currentPage) + 1
const previousPage = currentPage - 1
const hasNext : boolean = posts.length > currentPage*postPerPage ? true : false
const hasPrevious : boolean = currentPage > 1 ? true : false

---

<Layout title="Blog">
  <section class="relative z-20 max-w-2xl mx-auto my-12 px-7 lg:px-0">
    <PageHeading
      title="Blog"
      description="Dive into my musings on life and tech in my latest posts; a blend of introspection and innovation. Keep an eye out for fresh insights and updates!"
    />

    <div class="z-50 flex flex-col items-stretch w-full gap-5 my-8">
      {
        posts.slice(postPerPage* (currentPage - 1), postPerPage * (currentPage -1) + 3).map(p => {
          return (
            <div>
              <PostData post={p.frontmatter} link={p.url}/>
            </div>
          )
        })
      }
<!-- pagination -->
        <div class="flex justify-center">
            <div class="flex [&_a]:mx-1 w-1/3">
                <a
                    type="submit"
                    class={`btn ${hasPrevious ? "btn-active" : "btn-disabled"}`}
                    href=`${currentPage == 2 ? '/blog/' : '/blog/page/' + previousPage}`
                >
                    Previous
                </a>
                <a
                    type="submit"
                    class={`btn ${hasNext ? "btn-active" : "btn-disabled"}`}
                    href=`${hasNext ? '/blog/page/' + nextPage: '#'}`
                >
                    Next
                </a>
            </div>
        </div>
    </div>
</section>
</Layout>
