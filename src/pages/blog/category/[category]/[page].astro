---
import { getCollection } from "astro:content";
import PageHeading from "@/components/page-heading.astro";
import PostData from "@/components/post-card.astro";
import Layout from "@/layouts/main.astro";
  const allBlog = (await getCollection('posts')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );
const postPerPage : number = 3
const allCategories = Array.from(new Set((await getCollection('posts')).map(post => post.data.category)))


export async function getStaticPaths() {
  const paramsData = Array.from(new Set((await getCollection('posts')).map(post => post.data.category)))   

  const categories = paramsData.map(async(cat) => {
    const blogPerCategory = (await getCollection('posts')).sort(
      (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
    ).filter(c => c.data.category == cat).map(d => d.data.category)
    
    if(blogPerCategory.length > 3){
      let data : {
        params : {
        page : string,
        category: string
      }
      }[] = []
      const numberOfPages = Math.ceil(blogPerCategory.length / 3)
      for (let i = 2; i <= numberOfPages; i++) {
        data = [...data, {params : {page : `${i}`, category: `${cat}`}}]
      }
      return data
    }else{
      return []
    }
  })

  const promises = await Promise.all(categories)

  return promises.flat()

}

const currentPage = parseInt(Astro.params.page)
const { category } = Astro.params

const nextPage : number = currentPage + 1
const previousPage = currentPage - 1
const hasNext : boolean = allBlog.length > currentPage*postPerPage ? true : false
const hasPrevious : boolean = currentPage > 1 ? true : false

---

<Layout title="Blog" meta={[]}>
  <section class="relative z-20 max-w-2xl mx-auto my-12 px-7 lg:px-0">
    <PageHeading
      title="Blog"
      description="Dive into my musings on life and tech in my latest posts; a blend of introspection and innovation. Keep an eye out for fresh insights and updates!"
    />

    <div class="flex flex-row flex-wrap">
  
      {
        allCategories.map(value =><a 
          type="submit" 
          class={`btn m-1 cursor-pointer ${category != value && 'btn-active'}`}
          href={category == value ? '#':  `/blog/category/${value}`}
          >
            {value}
          </a>)
      }
      </div>

    <div class="z-50 flex flex-col items-stretch w-full gap-5 my-8">
      {
        allBlog.slice(postPerPage* (currentPage - 1), postPerPage * (currentPage -1) + 3).map(p => {
          return (
            <div>
              <PostData post={p.data} link={`/blog/${p.slug}`}/>
            </div>
          )
        })
      }
<!-- pagination -->
        <div class="flex justify-center">
            <div class="flex [&_a]:mx-1 w-1/3">
                <a
                    type="submit"
                    class={`btn ${hasPrevious ? "btn-active" : "btn-disabled"}`}
                    href=`${currentPage == 2 ? '/blog/category/' + category : '/blog/category/' + category +'/' + previousPage}`
                >
                    Previous
                </a>
                <a
                    type="submit"
                    class={`btn ${hasNext ? "btn-active" : "btn-disabled"}`}
                    href=`${hasNext ? '/blog/category/' + category + '/' + nextPage: '#'}`
                >
                    Next
                </a>
            </div>
        </div>
    </div>
</section>
</Layout>
